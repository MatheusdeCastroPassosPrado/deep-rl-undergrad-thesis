\select@language {english}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces AlphaGo Zero, learning model that beat the best players of Go, Chess and Shogi, learning to play without previous human knowledge \cite {DBLP:journals/corr/abs-1712-01815}.\relax }}{13}{figure.caption.5}
\contentsline {figure}{\numberline {1.2}{\ignorespaces Locomotion of Agent via Deep Reinforcement Learning \cite {DBLP:journals/corr/HeessTSLMWTEWER17}.\relax }}{13}{figure.caption.6}
\contentsline {figure}{\numberline {1.3}{\ignorespaces A Snapshot from the RoboCup Soccer 3D Simulation League.\relax }}{13}{figure.caption.7}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Illustration of an actual optimization run with covariance matrix adaptation on a simple two-dimensional problem \cite {cmaesfig}.\relax }}{17}{figure.caption.8}
\contentsline {figure}{\numberline {2.2}{\ignorespaces Human level control through deep reinforcement learning in atari games \cite {mnih2015humanlevel}.\relax }}{19}{figure.caption.9}
\contentsline {figure}{\numberline {2.3}{\ignorespaces OpenAI Five network architecture \cite {openaifive}.\relax }}{20}{figure.caption.10}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces An artificial neuron within a feed forward artificial neural network \cite {dejan12}. \relax }}{21}{figure.caption.11}
\contentsline {figure}{\numberline {3.2}{\ignorespaces An artificial neuron in detail.\relax }}{22}{figure.caption.12}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Function representation: in (a), we have a sigmoid function where weights vary. In (b), the same sigmoid but only bias varies.\relax }}{23}{figure.caption.13}
\contentsline {figure}{\numberline {3.4}{\ignorespaces Neural Network representation.\relax }}{23}{figure.caption.14}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Illustration of Sigmoid function.\relax }}{26}{figure.caption.15}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Illustration of $tanh$ function.\relax }}{26}{figure.caption.16}
\contentsline {figure}{\numberline {3.7}{\ignorespaces Illustration of ReLU function.\relax }}{27}{figure.caption.17}
\contentsline {figure}{\numberline {3.8}{\ignorespaces Illustration of leaky ReLU function.\relax }}{28}{figure.caption.18}
\contentsline {figure}{\numberline {3.9}{\ignorespaces Illustration of gradient descent in a two variables optimization \cite {tgilharco}. \relax }}{30}{figure.caption.19}
\contentsline {figure}{\numberline {3.10}{\ignorespaces Illustration of Stochastic Gradient Descent optimization. \relax }}{33}{figure.caption.20}
\contentsline {figure}{\numberline {3.11}{\ignorespaces Illustration of how each variation of Gradient Descent commonly behaves. \cite {dabbura2017}. \relax }}{33}{figure.caption.21}
\contentsline {figure}{\numberline {3.12}{\ignorespaces Illustration of how Gradient Descent with Momentum (blue arrows) and without it (black arrows) \cite {tgilharco}. \relax }}{35}{figure.caption.22}
\contentsline {figure}{\numberline {3.13}{\ignorespaces Illustration Gradient Descent divergence for a one variable optimization. \cite {tgilharco}. \relax }}{40}{figure.caption.23}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Reinforcement Learning System.\relax }}{44}{figure.caption.24}
\contentsline {figure}{\numberline {4.2}{\ignorespaces The agent\IeC {\textendash }environment interaction in a Markov decision process \cite {sutton1998rli}.\relax }}{49}{figure.caption.25}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces In the hybrid model, we can ensure the starting point is near of the optimal solution (orange arrow); otherwise, the starting point can be bad and harder to optimize (red arrow).\relax }}{51}{figure.caption.26}
\contentsline {figure}{\numberline {5.2}{\ignorespaces The architecture of a neural network designed to learn motions.\relax }}{54}{figure.caption.27}
\contentsline {figure}{\numberline {5.3}{\ignorespaces Intuition behind input normalization\relax }}{56}{figure.caption.29}
\contentsline {figure}{\numberline {5.4}{\ignorespaces Architecture used by pure Reinforcement Learning models.\relax }}{56}{figure.caption.30}
\contentsline {figure}{\numberline {5.5}{\ignorespaces Gaussian noise applied to action space to ensure better exploration in continuous environments. \cite {parameternoiseblog} \relax }}{57}{figure.caption.32}
\contentsline {figure}{\numberline {5.6}{\ignorespaces Initial setup from the task used to learning kick motion.\relax }}{58}{figure.caption.33}
\contentsline {figure}{\numberline {5.7}{\ignorespaces Reinforcement Learning Server Architecture. \cite {tgmuzio} \relax }}{58}{figure.caption.34}
\contentsline {figure}{\numberline {5.8}{\ignorespaces Data flow graph for PPO algorithm. \relax }}{61}{figure.caption.35}
\contentsline {figure}{\numberline {5.9}{\ignorespaces ``Pi" data flow node from PPO. \relax }}{61}{figure.caption.36}
\contentsline {figure}{\numberline {5.10}{\ignorespaces Policy data flow graph from Figure \ref {rlnetwork} \relax }}{62}{figure.caption.37}
\contentsline {figure}{\numberline {5.11}{\ignorespaces Policy data flow graph from Figure \ref {fig:model_plot} \relax }}{62}{figure.caption.38}
\contentsline {figure}{\numberline {5.12}{\ignorespaces Master-workers architecture for data parallelism. \relax }}{63}{figure.caption.39}
\contentsline {figure}{\numberline {5.13}{\ignorespaces Synchronous and Asynchornous Distributed Training. \relax }}{64}{figure.caption.40}
\contentsline {figure}{\numberline {5.14}{\ignorespaces Monitoring training metrics with Tensorboard. \relax }}{65}{figure.caption.41}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Plots of mean squared error and mean absolute error, during training.\relax }}{66}{figure.caption.42}
\contentsline {figure}{\numberline {6.2}{\ignorespaces The kick motion. The first row of figures shows the original kick motion. The second row shows the learned kick motion. Both motions are visually indistinguishable.\relax }}{67}{figure.caption.43}
\contentsline {figure}{\numberline {6.3}{\ignorespaces Joint values for comparing original and learned kicks. The neural network was able to fit the joint trajectories with small errors.\relax }}{68}{figure.caption.44}
\contentsline {figure}{\numberline {6.4}{\ignorespaces Joints positions, during a period of the walking motion for the original walk, and the learned walk and the joints positions effectively attained, during the learned walking motion.\relax }}{69}{figure.caption.46}
\contentsline {figure}{\numberline {6.5}{\ignorespaces The walking motions comparison. Figure (a) shows our agent in its regular walk, Figure (b) shows the same agent mimicking UT Austin Villa walk, and Figure (c) shows the UT Austin Villa agent itself performing his own walking motion.\relax }}{70}{figure.caption.48}
\addvspace {10\p@ }
